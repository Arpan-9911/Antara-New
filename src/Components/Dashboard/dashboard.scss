$h-padding: 15px;
$h-width: 36px;
$h-height: 24px;
$h-background-color: transparent;
$h-line-color: #fff;
$h-hover-line-color: red;
$h-line-height: 2px;
$h-border-radius: 4px;
$h-transition-time: 0.4s;
$h-transition-function: ease;
$h-transition-opacity: 0;
$h-vertical-gap: 13px;
$h-initial-opposition: 5px;
$h-hide-distance: $h-width + $h-padding;


@mixin line-props {
  width: 100%;
  height: $h-line-height;
  background-color: $h-line-color; 
  border-radius: $h-border-radius;
  position: absolute;
  transition-property: transform, opacity;
  transition-timing-function: ease;
  transition-duration: $h-transition-time;
}

.hamburger {
  padding: $h-padding;
  cursor: pointer;
  display: inline-block;
  overflow: hidden;
  background-color: $h-background-color;

  &__container {
    width: $h-width;
    height: $h-height;
    position: relative;
  }

  &:hover  &__inner {
    transform: translate(-#{$h-hide-distance}, 50%);
    opacity: $h-transition-opacity;
  }

  &:hover &__inner::before,
  &:hover &__inner::after {
    transform: translate(#{$h-hide-distance * 2}, 0);
    opacity: $h-transition-opacity;
  }

  &.is-active &__inner {
    display: none;
  }

  &__inner {
    @include line-props();
    top: 50%;
    transform: translate($h-initial-opposition, -50%);
    opacity: 1;


    &::before,
    &::after {
      @include line-props();

      content: "";
      opacity: 1;
      transform: translate(-#{$h-initial-opposition}, 0);
    }

    &::before {
      top: -#{$h-vertical-gap};
    }

    &::after {
      top: $h-vertical-gap;
    }
  }

  &:hover  &__hidden {
    opacity: 1;
    transform: translate(0, -50%);
  }

  &:hover &__hidden::before,
  &:hover &__hidden::after {
    opacity: 1;
    transform: translate(0, 0);
  }

  &.is-active &__hidden {
    opacity: 1;
    transform: rotate(45deg);
  }

  &.is-active &__hidden::before {
    transform: translate(0, #{$h-vertical-gap}) rotate(90deg);
    transform-origin: center;
  }

  &.is-active &__hidden::after {
    transform-origin: center;
    transform: translate(0, -#{$h-vertical-gap}) rotate(0);
  }

  &__hidden {
    opacity: 0;
    @include line-props();
    
    background-color: $h-hover-line-color;
    top: 50%;
    transform: translate(#{$h-hide-distance}, -50%);
    

    &::before,
    &::after {
      @include line-props();
      background-color: $h-hover-line-color;

      content: "";
      transform: translate(#{$h-hide-distance * 2}, 0);
    }

    &::before {
      top: -#{$h-vertical-gap};
    }

    &::after {
      top: $h-vertical-gap;
    }
  }

}


button {
  &.dark {
      --background: #2F3545;
      --shadow: 0 2px 8px -1px #{rgba(#151924, .32)};
      --shadow-hover: 0 4px 20px -2px #{rgba(#151924, .5)};
  }
  &.white {
      --background: #fff;
      --text: #275efe;
      --shadow: 0 2px 8px -1px #{rgba(#121621, .04)};
      --shadow-hover: 0 4px 20px -2px #{rgba(#121621, .12)};
  }
  &.fast {
      --duration: .32s;
  }
}

.button {
  --background: #275efe;
  --text: #fff;
  --font-size: 16px;
  --duration: .44s;
  --move-hover: -4px;
  --shadow: 0 2px 8px -1px #{rgba(#275efe, .32)};
  --shadow-hover: 0 4px 20px -2px #{rgba(#275efe, .5)};
  --font-shadow: var(--font-size);
  padding: 16px 32px;
  font-family: 'Roboto';
  font-weight: 500;
  line-height: var(--font-size);
  border-radius: 24px;
  display: block;
  outline: none;
  appearance: none;
  border: none;
  text-decoration: none;
  font-size: var(--font-size);
  letter-spacing: .5px;
  background: var(--background);
  color: var(--text);
  box-shadow: var(--shadow);
  transform: translateY(var(--y)) translateZ(0);
  transition: transform var(--duration) ease, box-shadow var(--duration) ease;
  div {
      display: flex;
      overflow: hidden;
      text-shadow: 0 var(--font-shadow) 0 var(--text);
      span {
          display: block;
          backface-visibility: hidden;
          font-style: normal;
          transition: transform var(--duration) ease;
          transform: translateY(var(--m)) translateZ(0);
          $i: 1;
          @while $i < 12 {
              &:nth-child(#{$i}) {
                  transition-delay: $i / 20 + s;
              }
              $i: $i + 1;
          }
      }
  }
  &:hover {
      --y: var(--move-hover);
      --shadow: var(--shadow-hover);
      span {
          --m: calc(var(--font-size) * -1);
      }
  }
  &.reverse {
      --font-shadow: calc(var(--font-size) * -1);
      &:hover {
          span {
              --m: calc(var(--font-size));
          }
      }
  }
}